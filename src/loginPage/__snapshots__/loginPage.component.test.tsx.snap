// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login page component credential component renders correctly 1`] = `
<div
  className="root-1"
  onKeyPress={[Function]}
>
  <WithStyles(ForwardRef(TextField))
    disabled={false}
    label="username-placeholder"
    onChange={[Function]}
    value=""
  />
  <WithStyles(ForwardRef(TextField))
    disabled={false}
    label="password-placeholder"
    onChange={[Function]}
    type="password"
    value=""
  />
  <WithStyles(ForwardRef(Button))
    color="primary"
    disabled={true}
    onClick={[Function]}
    variant="contained"
  >
    <WithStyles(ForwardRef(Typography))
      color="inherit"
      noWrap={true}
      style={
        Object {
          "marginTop": 3,
        }
      }
    >
      login-button
    </WithStyles(ForwardRef(Typography))>
  </WithStyles(ForwardRef(Button))>
</div>
`;

exports[`Login page component login page renders credential component if no redirect url 1`] = `
<div
  className="root-1"
>
  <WithStyles(ForwardRef(Paper))
    className="paper-class"
  >
    <WithStyles(ForwardRef(Avatar))
      className="avatar-class"
    >
      <LockOutlinedIcon />
    </WithStyles(ForwardRef(Avatar))>
    <WithStyles(ForwardRef(Typography))
      component="h1"
      variant="h5"
    >
      title
    </WithStyles(ForwardRef(Typography))>
    <CredentialsLoginScreen
      auth={
        Object {
          "failedToLogin": false,
          "loading": false,
          "provider": TestAuthProvider {
            "redirectUrl": null,
            "token": null,
            "user": null,
          },
          "signedOutDueToTokenInvalidation": false,
        }
      }
      classes={
        Object {
          "avatar": "avatar-class",
          "paper": "paper-class",
          "root": "root-1",
          "spinner": "spinner-class",
        }
      }
      location={
        Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        }
      }
      verifyUsernameAndPassword={[Function]}
    />
  </WithStyles(ForwardRef(Paper))>
</div>
`;

exports[`Login page component login page renders redirect component if redirect url present 1`] = `
<div
  className="root-1"
>
  <WithStyles(ForwardRef(Paper))
    className="paper-class"
  >
    <WithStyles(ForwardRef(Avatar))
      className="avatar-class"
    >
      <LockOutlinedIcon />
    </WithStyles(ForwardRef(Avatar))>
    <WithStyles(ForwardRef(Typography))
      component="h1"
      variant="h5"
    >
      title
    </WithStyles(ForwardRef(Typography))>
    <RedirectLoginScreen
      auth={
        Object {
          "failedToLogin": false,
          "loading": false,
          "provider": TestAuthProvider {
            "redirectUrl": "test redirect",
            "token": null,
            "user": null,
          },
          "signedOutDueToTokenInvalidation": false,
        }
      }
      classes={
        Object {
          "avatar": "avatar-class",
          "paper": "paper-class",
          "root": "root-1",
          "spinner": "spinner-class",
        }
      }
      location={
        Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        }
      }
      verifyUsernameAndPassword={[Function]}
    />
  </WithStyles(ForwardRef(Paper))>
</div>
`;

exports[`Login page component redirect component renders correctly 1`] = `
<div
  className="root-1"
>
  <WithStyles(ForwardRef(Button))
    color="primary"
    disabled={false}
    onClick={[Function]}
    variant="contained"
  >
    <WithStyles(ForwardRef(Typography))
      color="inherit"
      noWrap={true}
      style={
        Object {
          "marginTop": 3,
        }
      }
    >
      Login with Github
    </WithStyles(ForwardRef(Typography))>
  </WithStyles(ForwardRef(Button))>
</div>
`;
